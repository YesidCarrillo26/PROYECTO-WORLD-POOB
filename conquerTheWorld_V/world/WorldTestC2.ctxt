#BlueJ class context
comment0.target=WorldTestC2
comment0.text=\r\n\ The\ test\ class\ WorldTestC2.\r\n\r\n\ @author\ \ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment10.params=
comment10.target=void\ segunCPdeberiaIntentarConquistarConquistarNacion()
comment11.params=
comment11.target=void\ segunCPnoDeberiaIntentarConquistarConquistarNacion()
comment12.params=
comment12.target=void\ tearDown()
comment12.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment2.params=
comment2.target=void\ makeInvisible()
comment3.params=
comment3.target=void\ segunCPdeberiaCrearElWorld()
comment4.params=
comment4.target=void\ segunCPDeberiaCrearNacion()
comment5.params=
comment5.target=void\ segunCPNoDeberiaCrearNacion()
comment6.params=
comment6.target=void\ segunCPDeberiaCrearRuta()
comment7.params=
comment7.target=void\ segunCPNoDeberiaCrearRuta()
comment8.params=
comment8.target=void\ segunCPdeberiaMoverLasArmiesPorElMejorCamino()
comment8.text=\r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaConquistar()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //w2.addNation("yellow",20,20,\ 10);\r\n\ \ \ \ \ \ \ \ //w2.addNation("blue",59,50,\ 1);\r\n\ \ \ \ \ \ \ \ w2.nations.get(0).sumArmies(5);\r\n\ \ \ \ \ \ \ \ w2.nations.get(1).sumArmies(5);\r\n\ \ \ \ \ \ \ \ w2.conquer();\r\n\ \ \ \ \ \ \ \ assertTrue(w2.ok());\r\n\ \ \ \ \ \ \ \ makeInvisible();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPNodeberiaConquistar()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //w2.addNation("yellow",20,20,\ 10);\r\n\ \ \ \ \ \ \ \ //w2.addNation("blue",59,50,\ 1);\r\n\ \ \ \ \ \ \ \ w2.nations.get(0).sumArmies(-1);\r\n\ \ \ \ \ \ \ \ w2.nations.get(1).sumArmies(-2);\r\n\ \ \ \ \ \ \ \ w2.conquer();\r\n\ \ \ \ \ \ \ \ assertFalse(w2.ok());\r\n\ \ \ \ \ \ \ \ makeInvisible();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPDeberiaRetornarNacionasConquistadas()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //w2.addNation("yellow",20,20,\ 10);\r\n\ \ \ \ \ \ \ \ //w2.addNation("blue",59,50,\ 1);\r\n\ \ \ \ \ \ \ \ w2.nations.get(0).sumArmies(0);\r\n\ \ \ \ \ \ \ \ w2.nations.get(1).sumArmies(0);\r\n\ \ \ \ \ \ \ \ w2.conqueredNations();\r\n\ \ \ \ \ \ \ \ assertTrue(w2.ok());\r\n\ \ \ \ \ \ \ \ makeInvisible();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPNoDeberiaRetornarNacionasConquistadas()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //w2.addNation("yellow",20,20,\ 10);\r\n\ \ \ \ \ \ \ \ //w2.addNation("blue",59,50,\ 1);\r\n\ \ \ \ \ \ \ \ w2.nations.get(0).sumArmies(-1);\r\n\ \ \ \ \ \ \ \ w2.nations.get(1).sumArmies(-2);\r\n\ \ \ \ \ \ \ \ w2.conqueredNations();\r\n\ \ \ \ \ \ \ \ assertFalse(w2.ok());\r\n\ \ \ \ \ \ \ \ makeInvisible();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaEliminarNacion()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //w2.addNation("yellow",20,20,\ 10);\r\n\ \ \ \ \ \ \ \ w2.delNation("yellow");\r\n\ \ \ \ \ \ \ \ assertTrue(w2.ok());\r\n\ \ \ \ \ \ \ \ makeInvisible();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPNoDeberiaEliminarNacion()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //w2.addNation("yellow",20,20,\ 10);\r\n\ \ \ \ \ \ \ \ w2.delNation("red");\r\n\ \ \ \ \ \ \ \ assertFalse(w2.ok());\r\n\ \ \ \ \ \ \ \ makeInvisible();\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\ \r\n\ \ \ \ public\ void\ segunCPdeberiaEliminarRoute()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.addRoute("yellow",\ "blue",\ 4);\r\n\ \ \ \ \ \ \ \ w1.delStreet("yellow",\ "blue");\r\n\ \ \ \ \ \ \ \ assertTrue(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\ \r\n\ \ \ \ public\ void\ segunCPNoDdeberiaEliminarRoute()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ //w1.addRoute("yellow",\ "blue",\ 4);\r\n\ \ \ \ \ \ \ \ w1.delStreet("yellow",\ "blue");\r\n\ \ \ \ \ \ \ \ assertFalse(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaHacerVisible()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.makeVisible();\r\n\ \ \ \ \ \ \ \ assertTrue(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPNoDeberiaHacerVisible()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.makeVisible();\r\n\ \ \ \ \ \ \ \ w1.makeVisible();\r\n\ \ \ \ \ \ \ \ assertFalse(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaHacerinVisible()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w3.makeInvisible();\r\n\ \ \ \ \ \ \ \ assertTrue(w3.ok());\r\n\ \ \ \ }\r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPNoDeberiaHacerinVisible()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w3.makeInvisible();\r\n\ \ \ \ \ \ \ \ w3.makeInvisible();\r\n\ \ \ \ \ \ \ \ assertFalse(w3.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaMoverLasArmiesDeLaRuta()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.addRoute("yellow",\ "blue",\ 4);\r\n\ \ \ \ \ \ \ \ w1.moveArmyOneRoute("yellow",\ "blue");\r\n\ \ \ \ \ \ \ \ assertTrue(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPnoDeberiaMoverLasArmiesDeLaRuta()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.moveArmyOneRoute("yellow",\ "blue");\r\n\ \ \ \ \ \ \ \ assertFalse(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaRetornarPagos()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.payments();\r\n\ \ \ \ \ \ \ \ assertTrue(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPnoDeberiaRetornarPagos()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.addRoute("yellow",\ "blue",\ -50);\r\n\ \ \ \ \ \ \ \ w1.moveArmyOneRoute("yellow",\ "blue");\r\n\ \ \ \ \ \ \ \ w1.payments();\r\n\ \ \ \ \ \ \ \ assertFalse(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaPonerArmies()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.putArmy("yellow");\r\n\ \ \ \ \ \ \ \ assertTrue(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPnoDeberiaPonerArmies()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.putArmy("red");\r\n\ \ \ \ \ \ \ \ assertFalse(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaRemoverArmies()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.putArmy("yellow");\r\n\ \ \ \ \ \ \ \ w1.removeArmy("yellow");\r\n\ \ \ \ \ \ \ \ assertTrue(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPnoDeberiaRemoverArmies()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.removeArmy("red");\r\n\ \ \ \ \ \ \ \ assertFalse(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPdeberiaHacerRedo()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.undo();\r\n\ \ \ \ \ \ \ \ w1.redo();\r\n\ \ \ \ \ \ \ \ assertTrue(w1.ok());\r\n\ \ \ \ }\r\n\ \ \ \ @Test\r\n\ \ \ \ public\ void\ segunCPnoDeberiaHacerRedo()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ w1.redo();\r\n\ \ \ \ \ \ \ \ assertFalse(w1.ok());\r\n}
comment9.params=
comment9.target=void\ segunCPnoDeberiaMoverLasArmiesPorElMejorCamino()
numComments=13
